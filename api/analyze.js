import express from "express";
import fetch from "node-fetch";

const router = express.Router();

router.post("/analyze", async (req, res) => {
  const apiKey = process.env.OPENAI_API_KEY;
  if (!apiKey) return res.status(500).json({ error: "OPENAI_API_KEY is missing" });

  const { imageBase64 } = req.body;
  if (!imageBase64) return res.status(400).json({ error: "‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á imageBase64" });

  // üîÆ Prompt ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏Å AI
  const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏´‡∏°‡∏≠‡∏î‡∏π‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏à‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ù‡πà‡∏≤‡∏°‡∏∑‡∏≠ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ)
‡πÉ‡∏´‡πâ‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô:

- ‡πÄ‡∏™‡πâ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï
- ‡πÄ‡∏™‡πâ‡∏ô‡∏™‡∏°‡∏≠‡∏á
- ‡πÄ‡∏™‡πâ‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à
- ‡πÄ‡∏™‡πâ‡∏ô‡∏ß‡∏≤‡∏™‡∏ô‡∏≤

‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö ‡πÅ‡∏ï‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
  `;

  try {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${apiKey}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "gpt-4o-mini", // ‡∏´‡∏£‡∏∑‡∏≠ gpt-4o, gpt-3.5-turbo
        messages: [
          { role: "system", content: "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏•‡∏≤‡∏¢‡∏°‡∏∑‡∏≠" },
          { role: "user", content: prompt }
        ],
        temperature: 0.7
      })
    });

    const data = await response.json();
    if (data.error) return res.status(500).json({ error: data.error.message });

    const resultText = data.choices[0].message.content;
    res.json({ result: resultText });

  } catch (error) {
    console.error(error);
    res.status(500).json({ error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å OpenAI API" });
  }
});

export default router;
